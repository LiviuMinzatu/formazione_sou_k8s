- name: Provisioning completo Jenkins + Docker
  hosts: all
  become: true

  vars:
    jenkins_agent_container: jenkins-agent
    jenkins_agent_image: jenkins/inbound-agent:latest
    jenkins_agent_name: agent
    jenkins_agent_secret: 137ce6cdbeb3ce52186e8b9ce9713d3b3b9fb64514e19c109bf30799faf0fa7b
    jenkins_agent_workdir: /home/jenkins/agent
    jenkins_container_name: jenkins-master
    jenkins_ip: 172.30.0.10
    jenkins_master_url: http://172.30.0.10:8080
    jenkins_network: jenkins_net
    jenkins_subnet: 172.30.0.0/16

  tasks:
    - name: Disinstalla eventuali versioni vecchie di Docker
      dnf:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent

    - name: Installa pacchetti richiesti
      dnf:
        name: dnf-plugins-core
        state: present

    - name: Aggiungi il repository Docker ufficiale
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Installa Docker Engine
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Abilita e avvia il servizio Docker
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Installa python3 e pip3
      dnf:
        name:
          - python3
          - python3-pip
        state: present

    - name: Installa il modulo docker di Python
      pip:
        executable: pip3
        name: docker

    - name: Rimuovi podman-docker se presente (evita conflitto)
      dnf:
        name: podman-docker
        state: absent

    - name: Installa pacchetti base (Python, pip, plugin DNF)
      dnf:
        name:
          - python3
          - python3-pip
          - dnf-plugins-core
        state: present

    - name: Aggiungi il repository ufficiale di Docker (di nuovo per sicurezza)
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Installa Docker CE (ridondante ma sicuro)
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Abilita e avvia il servizio Docker (di nuovo, per sicurezza)
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Installa il modulo Python per Docker
      pip:
        executable: pip3
        name: docker

    - name: Crea rete Docker Jenkins
      community.docker.docker_network:
        name: "{{ jenkins_network }}"
        driver: bridge
        ipam_config:
          - subnet: "{{ jenkins_subnet }}"

    - name: Esegui container Jenkins (solo master)
      community.docker.docker_container:
        name: "{{ jenkins_container_name }}"
        image: jenkins/jenkins:lts
        networks:
          - name: "{{ jenkins_network }}"
            ipv4_address: "{{ jenkins_ip }}"
        ports:
          - "8080:8080"
          - "50000:50000"
        restart_policy: always
        state: started
        volumes:
          - jenkins_home:/var/jenkins_home

    - name: Avvia container Jenkins Agent con accesso a Docker host
      community.docker.docker_container:
        name: "{{ jenkins_agent_container }}"
        image: "{{ jenkins_agent_image }}"
        user: root
        env:
          JENKINS_AGENT_NAME: "{{ jenkins_agent_name }}"
          JENKINS_AGENT_WORKDIR: "{{ jenkins_agent_workdir }}"
          JENKINS_SECRET: "{{ jenkins_agent_secret }}"
          JENKINS_URL: "{{ jenkins_master_url }}"
        networks:
          - name: "{{ jenkins_network }}"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        privileged: true
        recreate: true
        restart_policy: always
        state: started

    - name: Aggiorna la cache dei pacchetti nel container agent
      community.docker.docker_container_exec:
        container: "{{ jenkins_agent_container }}"
        command: apt-get update
        tty: true
        user: root

    - name: Installa la CLI Docker nel container agent
      community.docker.docker_container_exec:
        container: "{{ jenkins_agent_container }}"
        command: apt-get install -y docker.io
        tty: true
        user: root
